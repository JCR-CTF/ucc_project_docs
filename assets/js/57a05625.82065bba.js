"use strict";(self.webpackChunkucc_docs=self.webpackChunkucc_docs||[]).push([[7938],{5052:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"SIMULATION/Themes/CSS","title":"CSS","description":"One quirk of Vite\'s manifest system is that it does not directly generate a manifest for CSS assets. To get around this the UCCD developers created a Vite plugin (vite-manifest-css) which will create a seperate manifest specifically for CSS files called manifest-css.json.","source":"@site/docs/SIMULATION/Themes/CSS.md","sourceDirName":"SIMULATION/Themes","slug":"/SIMULATION/Themes/CSS","permalink":"/ucc_project_docs/docs/SIMULATION/Themes/CSS","draft":false,"unlisted":false,"editUrl":"https://github.com/JCR-CTF/ucc_project_docs/tree/main/docs/SIMULATION/Themes/CSS.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Alpine.js","permalink":"/ucc_project_docs/docs/SIMULATION/Themes/Alpine.Js"},"next":{"title":"JavaScript","permalink":"/ucc_project_docs/docs/SIMULATION/Themes/JavaScript"}}');var i=n(4848),a=n(8453);const c={},o="CSS",r={},l=[];function d(e){const s={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"css",children:"CSS"})}),"\n",(0,i.jsx)(s.h1,{id:"manifest-cssjson",children:"manifest-css.json"}),"\n",(0,i.jsx)(s.p,{children:"One quirk of Vite's manifest system is that it does not directly generate a manifest for CSS assets. To get around this the UCCD developers created a Vite plugin (vite-manifest-css) which will create a seperate manifest specifically for CSS files called manifest-css.json."}),"\n",(0,i.jsx)(s.p,{children:"This can be used by importing CSSManifestPlugin and then including it as a Vite plugin as shown in the following Vite config example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yml",children:'const { resolve } = require("path");\nimport { defineConfig } from "vite";\nimport { CSSManifestPlugin } from "vite-manifest-css";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [CSSManifestPlugin()],\n  build: {\n    manifest: true,\n    outDir: "static",\n    rollupOptions: {\n      input: {\n        index: resolve(__dirname, "assets/js/index.js"),\n        main: resolve(__dirname, "assets/scss/main.scss"),\n      },\n    },\n  },\n});\n\nA generated example of manifest-css.json would be:\n\n{\n  "main.css": {\n    "file": "assets/main.b16debf0.css"\n  }\n}\n\n# Assets.css()\nUCCD provides a helper to automatically include CSS files based on a key in manifest-css.json.\n\nUsing the previous manifest-css.json example, if a template includes {{ Assets.css("main.css") }}, UCCD will generate something like:\n\n<link rel="stylesheet" href="/themes/core/static/assets/main.b16debf0.css"/>\n'})})]})}function m(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var t=n(6540);const i={},a=t.createContext(i);function c(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);