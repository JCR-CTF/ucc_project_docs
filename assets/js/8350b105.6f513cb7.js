"use strict";(self.webpackChunkucc_docs=self.webpackChunkucc_docs||[]).push([[6229],{669:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"SIMULATION/Challenges/Flags/Flags","title":"Flags","description":"In most CTFs, the objective is to extract a flag value from a challenge. Often by exploiting some kind of security vulnerability or by knowing some property of computers. Flags are sort of the proof that you accomplished the task.","source":"@site/docs/SIMULATION/Challenges/Flags/Flags.md","sourceDirName":"SIMULATION/Challenges/Flags","slug":"/SIMULATION/Challenges/Flags/","permalink":"/ucc_project_docs/docs/SIMULATION/Challenges/Flags/","draft":false,"unlisted":false,"editUrl":"https://github.com/JCR-CTF/ucc_project_docs/tree/main/docs/SIMULATION/Challenges/Flags/Flags.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dockerising","permalink":"/ucc_project_docs/docs/SIMULATION/Challenges/Dockerising/"},"next":{"title":"Hints","permalink":"/ucc_project_docs/docs/SIMULATION/Challenges/Hints/"}}');var a=s(4848),l=s(8453);const r={},o="Flags",i={},c=[{value:"Types of Flags",id:"types-of-flags",level:2},{value:"Static Flag",id:"static-flag",level:3},{value:"Regex Flag",id:"regex-flag",level:3},{value:"Programmable Flag",id:"programmable-flag",level:3},{value:"Example:",id:"example",level:4}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"flags",children:"Flags"})}),"\n",(0,a.jsx)(t.p,{children:"In most CTFs, the objective is to extract a flag value from a challenge. Often by exploiting some kind of security vulnerability or by knowing some property of computers. Flags are sort of the proof that you accomplished the task."}),"\n",(0,a.jsx)(t.p,{children:"In order for a user to receive points for a challenge, they must submit the corresponding flag. Ucc Cyber Range allows admins to create different types of flags for each challenge."}),"\n",(0,a.jsx)(t.h2,{id:"types-of-flags",children:"Types of Flags"}),"\n",(0,a.jsx)(t.h3,{id:"static-flag",children:"Static Flag"}),"\n",(0,a.jsx)(t.p,{children:"Static flags are simple, users must submit exactly the value of the flag in order to receive points."}),"\n",(0,a.jsx)(t.h3,{id:"regex-flag",children:"Regex Flag"}),"\n",(0,a.jsx)(t.p,{children:"Regex flags allow admins to define regular expressions to match flags. Regular expressions allow challenges to accept multiple flag values as correct as long as it can be represented in a regular expression."}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["To test your regular expressions we recommend using the ",(0,a.jsx)(t.a,{href:"https://pythex.org/",children:"Pythex"})," website."]})}),"\n",(0,a.jsx)(t.h3,{id:"programmable-flag",children:"Programmable Flag"}),"\n",(0,a.jsx)(t.admonition,{type:"caution",children:(0,a.jsx)(t.p,{children:"Programmable flags are only available on Hosted or Enterprise Ucc Cyber Range instances"})}),"\n",(0,a.jsx)(t.p,{children:"Programmable keys allow you to use Python code to check user submissions when static or regex flags are not flexible enough."}),"\n",(0,a.jsx)(t.p,{children:"A check function is a Python function taking a single argument. The argument provided will be the user's input. The function should then return a Boolean indicating whether the user was correct or not."}),"\n",(0,a.jsx)(t.h4,{id:"example",children:"Example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'def check(x):\n   if x == "flag{this_is_the_answer}":\n       return True\n   else:\n       return False\n'})})]})}function g(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(6540);const a={},l=n.createContext(a);function r(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);